[{"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\index.js":"1","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reportWebVitals.js":"2","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\App.js":"3","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Landing.js":"4","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Navbar.js":"5","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\auth\\Register.js":"6","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\auth\\Login.js":"7","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\store.js":"8","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\index.js":"9","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\alert.js":"10","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\types.js":"11","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\alert.js":"12","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Alert.js":"13","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\auth.js":"14","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\auth.js":"15","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\utils\\setAuthToken.js":"16","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Dashboard.js":"17","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\routing\\PrivateRoute.js":"18","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\profile.js":"19","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\profile.js":"20","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Spinner.js":"21","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\DashboardActions.js":"23","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\EditProfile.js":"24","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\AddExperience.js":"25","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\AddEducation.js":"26","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Experience.js":"27","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Education.js":"28","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profiles\\Profiles.js":"29","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profiles\\ProfileItem.js":"30","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\Profile.js":"31","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\ProfileTop.js":"32","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\ProfileAbout.js":"33","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\ProfileExperience.js":"34","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\ProfileEducation.js":"35","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\ProfileGithub.js":"36"},{"size":198,"mtime":1611345980990,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":2221,"mtime":1611522215837,"results":"40","hashOfConfig":"38"},{"size":1187,"mtime":1611456661189,"results":"41","hashOfConfig":"38"},{"size":1531,"mtime":1611522006277,"results":"42","hashOfConfig":"38"},{"size":3036,"mtime":1611450157329,"results":"43","hashOfConfig":"38"},{"size":2064,"mtime":1611450164411,"results":"44","hashOfConfig":"38"},{"size":384,"mtime":1611354146838,"results":"45","hashOfConfig":"38"},{"size":194,"mtime":1611453398701,"results":"46","hashOfConfig":"38"},{"size":384,"mtime":1611521160725,"results":"47","hashOfConfig":"38"},{"size":692,"mtime":1611516074274,"results":"48","hashOfConfig":"38"},{"size":368,"mtime":1611356557066,"results":"49","hashOfConfig":"38"},{"size":547,"mtime":1611448759717,"results":"50","hashOfConfig":"38"},{"size":1109,"mtime":1611521138012,"results":"51","hashOfConfig":"38"},{"size":2078,"mtime":1611522017504,"results":"52","hashOfConfig":"38"},{"size":258,"mtime":1611430282756,"results":"53","hashOfConfig":"38"},{"size":2237,"mtime":1611512289309,"results":"54","hashOfConfig":"38"},{"size":628,"mtime":1611522169871,"results":"55","hashOfConfig":"38"},{"size":1030,"mtime":1611516074303,"results":"56","hashOfConfig":"38"},{"size":5496,"mtime":1611516074286,"results":"57","hashOfConfig":"38"},{"size":211,"mtime":1611457053013,"results":"58","hashOfConfig":"38"},{"size":7095,"mtime":1611460915330,"results":"59","hashOfConfig":"38"},{"size":781,"mtime":1611502506063,"results":"60","hashOfConfig":"38"},{"size":8041,"mtime":1611520981976,"results":"61","hashOfConfig":"38"},{"size":3450,"mtime":1611521174057,"results":"62","hashOfConfig":"38"},{"size":3468,"mtime":1611521091246,"results":"63","hashOfConfig":"38"},{"size":1438,"mtime":1611511621485,"results":"64","hashOfConfig":"38"},{"size":1453,"mtime":1611511785979,"results":"65","hashOfConfig":"38"},{"size":1395,"mtime":1611520930188,"results":"66","hashOfConfig":"38"},{"size":1040,"mtime":1611521997909,"results":"67","hashOfConfig":"38"},{"size":3317,"mtime":1611534170313,"results":"68","hashOfConfig":"38"},{"size":2409,"mtime":1611523476488,"results":"69","hashOfConfig":"38"},{"size":1016,"mtime":1611523903416,"results":"70","hashOfConfig":"38"},{"size":750,"mtime":1611532370922,"results":"71","hashOfConfig":"38"},{"size":826,"mtime":1611532746857,"results":"72","hashOfConfig":"38"},{"size":1828,"mtime":1611534455234,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"827zrw",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\index.js",[],["157","158"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reportWebVitals.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\App.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Landing.js",["159"],"import React from 'react';\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux'\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nfunction Landing(props) {\r\n\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Developer Connector</h1>\r\n          <p className=\"lead\">\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link\r\n              to=\"/register\"\r\n              className=\"btn btn-primary\"\r\n            >Sign Up</Link>\r\n            <a\r\n              to=\"/login\"\r\n              className=\"btn btn-light\"\r\n            >Login</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Landing);","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Navbar.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\auth\\Register.js",["160"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {setAlert} from \"../../actions/alert\";\r\nimport {register} from \"../../actions/auth\";\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nfunction Register(props) {\r\n  const [formData, setFormData] = React.useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  })\r\n\r\n  const { name, email, password, password2 } = formData\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (password !== password2) {\r\n      props.setAlert('Password do not match', 'danger', 2000)\r\n    } else {\r\n      props.register({name, email, password})\r\n    }\r\n  }\r\n\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n      <form\r\n        className=\"form\"\r\n        action=\"create-profile.html\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            required\r\n            value={name}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={onChange}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          value=\"Register\"\r\n        />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/Login\">Log in</Link>\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setAlert, register})(Register);","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\auth\\Login.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\store.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\index.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\alert.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\types.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\alert.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Alert.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\auth.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\auth.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\utils\\setAuthToken.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Dashboard.js",["161"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux'\r\nimport {getCurrentProfile} from \"../../actions/profile\";\r\nimport Spinner from '../layout/Spinner'\r\nimport {Link} from \"react-router-dom\";\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport {deleteAccount} from \"../../actions/profile\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Dashboard(props) {\r\n\r\n  React.useEffect(() => {\r\n    props.getCurrentProfile()\r\n  }, [])\r\n\r\n  return (\r\n    props.auth.loading && props.profile === null\r\n      ? <Spinner/>\r\n      : <React.Fragment>\r\n        <h1 className=\"large text-primary\">Dashboard</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Welcome {props.profile.user && props.profile.user.name}\r\n        </p>\r\n        {!!props.profile.profile\r\n          ? <React.Fragment>\r\n            <DashboardActions/>\r\n            <Experience experience={props.profile.profile.experience}/>\r\n            <Education education={props.profile.profile.education}/>\r\n            <div className=\"my-2\">\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => {\r\n                    props.deleteAccount()\r\n                  }\r\n                }\r\n              >\r\n                <i className=\"fa fa-user-minus\">\r\n\r\n                </i>\r\n                Delete Account\r\n              </button>\r\n            </div>\r\n          </React.Fragment>\r\n          : <React.Fragment>\r\n            You have not yet setup a profile, please add some info\r\n            <Link\r\n              to=\"/create-profile\"\r\n              className=\"btn btn-primary my-1\"\r\n            >\r\n              Create Profile\r\n            </Link>\r\n          </React.Fragment>\r\n        }\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    profile: state.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getCurrentProfile, deleteAccount})(Dashboard);","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\profile.js",["162"],"import {\r\n  CLEAR_PROFILE,\r\n  GET_PROFILE, GET_PROFILES, GET_REPOS,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  const {type, payload} = action\r\n\r\n  switch (type) {\r\n    case UPDATE_PROFILE:\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false\r\n      }\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false\r\n      }\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false\r\n      }\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      }\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        loading: false,\r\n        repos: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\profile.js",["163"],"import axios from 'axios'\r\nimport {setAlert} from \"./alert\";\r\n\r\nimport {\r\n  ACCOUNT_DELETED,\r\n  CLEAR_PROFILE,\r\n  GET_PROFILE,\r\n  GET_PROFILES, GET_REPOS,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE\r\n} from \"./types\";\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me')\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: {msg: err.response.statusText, status: err.response.status}\r\n      })\r\n  }\r\n}\r\n\r\n// Get current users profile\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_PROFILE\r\n  })\r\n  try {\r\n    const res = await axios.get('/api/profile')\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\n// Get current users profile\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`)\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`)\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProfile = (formData, history, edit=false) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const res = await axios.post('/api/profile', formData, config)\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    })\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'))\r\n    if (!edit) {\r\n      history.push('/dashboard')\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const res = await axios.put('/api/profile/experience', formData, config)\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    })\r\n\r\n    dispatch(setAlert('Experience added', 'success'))\r\n    history.push('/dashboard')\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const res = await axios.put('/api/profile/education', formData, config)\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    })\r\n\r\n    dispatch(setAlert('Education added', 'success'))\r\n    history.push('/dashboard')\r\n  } catch (err) {\r\n    const errors = err.response.data.errors\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`)\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    })\r\n\r\n\r\n    dispatch(setAlert('Experience removed', 'success'))\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`)\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    })\r\n\r\n\r\n    dispatch(setAlert('Education removed', 'success'))\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {msg: err.response.statusText, status: err.response.status}\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteAccount = id => async dispatch => {\r\n  console.log('delete account?')\r\n  if (window.confirm('Are you sure? This can not be undone!')) {\r\n    try {\r\n      const res = await axios.delete(`/api/profile/`)\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE\r\n      })\r\n\r\n      dispatch({\r\n        type: ACCOUNT_DELETED\r\n      })\r\n\r\n      dispatch(setAlert('Your account has been permanantly deleted'))\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: {msg: err.response.statusText, status: err.response.status}\r\n      })\r\n    }\r\n  }\r\n}","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Spinner.js",["164"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Spinner = props => {\r\n  return (\r\n    <div>\r\n      Spinner\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.propTypes = {\r\n\r\n};\r\n\r\nexport default Spinner;","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\CreateProfile.js",["165"],"import React from 'react';\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux'\r\nimport {createProfile} from \"../../actions/profile\";\r\n\r\nconst CreateProfile = props => {\r\n  const [formData, setFormData] = React.useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  })\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = React.useState(false)\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData\r\n\r\n  const onChange = (e) => {\r\n    setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    props.createProfile(formData, props.history)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <div className=\"form-group\">\r\n          <select\r\n            value={status}\r\n            onChange={onChange}\r\n            name=\"status\"\r\n          >\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small\r\n            className=\"form-text\"\r\n          >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={company}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={website}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={location}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={skills}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={githubusername}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            value={bio}\r\n            onChange={onChange}\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n        {\r\n          displaySocialInputs && <React.Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                value={twitter}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                value={facebook}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                value={youtube}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                value={linkedin}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                value={instagram}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        }\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary my-1\"\r\n        />\r\n        <a\r\n          className=\"btn btn-light my-1\"\r\n          href=\"dashboard.html\"\r\n        >Go Back</a>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport default connect(null, {createProfile})(withRouter(CreateProfile));","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\DashboardActions.js",["166"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nDashboardActions.propTypes = {};\r\n\r\nfunction DashboardActions(props) {\r\n  return (\r\n    <div className=\"dash-buttons\">\r\n      <Link\r\n        to=\"/edit-profile\"\r\n        className=\"btn btn-light\"\r\n      ><i className=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link\r\n      >\r\n      <Link\r\n        to=\"/add-experience\"\r\n        className=\"btn btn-light\"\r\n      ><i className=\"fab fa-black-tie text-primary\"></i> Add Experience</Link\r\n      >\r\n      <Link\r\n        to=\"/add-education\"\r\n        className=\"btn btn-light\"\r\n      ><i className=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link\r\n      >\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardActions;","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\EditProfile.js",["167"],"import React from 'react';\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux'\r\nimport {createProfile} from \"../../actions/profile\";\r\nimport {getCurrentProfile} from \"../../actions/profile\";\r\n\r\nconst EditProfile = ({profile: {profile, loading}, createProfile, getCurrentProfile, history}) => {\r\n  const initialState = {\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  }\r\n\r\n  const [formData, setFormData] = React.useState(initialState)\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    if (!profile) getCurrentProfile();\r\n    if (!loading && profile) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      for (const key in profile.social) {\r\n        if (key in profileData) profileData[key] = profile.social[key];\r\n      }\r\n      if (Array.isArray(profileData.skills))\r\n        profileData.skills = profileData.skills.join(', ');\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, getCurrentProfile, profile])\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData\r\n\r\n  const onChange = (e) => {\r\n    setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    createProfile(formData, history, true)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <div className=\"form-group\">\r\n          <select\r\n            value={status}\r\n            onChange={onChange}\r\n            name=\"status\"\r\n          >\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small\r\n            className=\"form-text\"\r\n          >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={company}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={website}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={location}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={skills}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={githubusername}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            value={bio}\r\n            onChange={onChange}\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n        {\r\n          displaySocialInputs && <React.Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                value={twitter}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                value={facebook}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                value={youtube}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                value={linkedin}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                value={instagram}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        }\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary my-1\"\r\n        />\r\n        <Link\r\n          className=\"btn btn-light my-1\"\r\n          to=\"/dashboard\"\r\n        >Go Back</Link>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    profile: state.profile\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {createProfile, getCurrentProfile})\r\n(withRouter(EditProfile));","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\AddExperience.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\AddEducation.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Education.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profiles\\Profiles.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profiles\\ProfileItem.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\Profile.js",["168"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\ProfileTop.js",["169","170","171","172"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({profile: {status, company, location, website, social, user: {name, avatar}}}) => {\r\n  return (\r\n    <div className=\"profile-top bg-primary p-2\">\r\n      <img\r\n        className=\"round-img my-1\"\r\n        src={avatar}\r\n        alt=\"\"\r\n      />\r\n      <h1 className=\"large\">{name}</h1>\r\n      <p className=\"lead\">\r\n        {company && <span>at {company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className=\"icons my-1\">\r\n        {\r\n          website && (\r\n            <a\r\n              href={website}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fas fa-globe fa-2x\"></i>\r\n            </a>\r\n          )\r\n        }\r\n        {\r\n          social && social.twitter && (\r\n            <a\r\n              href={social.twitter}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n            </a>\r\n          )\r\n        }\r\n        {\r\n          social && social.facebook && (\r\n            <a\r\n              href={social.facebook}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n            </a>\r\n          )\r\n        }\r\n        {\r\n          social && social.linkedin && (\r\n            <a\r\n              href={social.linkedin}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n            </a>\r\n          )\r\n        }\r\n        {\r\n          social && social.youtube && (\r\n            <a\r\n              href={social.youtube}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n            </a>\r\n          )\r\n        }\r\n        {\r\n          social && social.instagram && (\r\n            <a\r\n              href={social.instagram}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n            </a>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileTop;","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\ProfileAbout.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\ProfileExperience.js",["173","174"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\ProfileEducation.js",["175"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile\\ProfileGithub.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":30,"column":13,"nodeType":"182","endLine":33,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":13},{"ruleId":"187","severity":1,"message":"188","line":23,"column":6,"nodeType":"189","endLine":23,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":16,"column":1,"nodeType":"193","endLine":55,"endColumn":2},{"ruleId":"183","severity":1,"message":"194","line":195,"column":13,"nodeType":"185","messageId":"186","endLine":195,"endColumn":16},{"ruleId":"183","severity":1,"message":"195","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":17},{"ruleId":"183","severity":1,"message":"196","line":2,"column":9,"nodeType":"185","messageId":"186","endLine":2,"endColumn":13},{"ruleId":"183","severity":1,"message":"195","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":17},{"ruleId":"187","severity":1,"message":"197","line":42,"column":6,"nodeType":"189","endLine":42,"endColumn":43,"suggestions":"198"},{"ruleId":"187","severity":1,"message":"199","line":18,"column":6,"nodeType":"189","endLine":18,"endColumn":22,"suggestions":"200"},{"ruleId":"180","severity":1,"message":"201","line":40,"column":9,"nodeType":"182","endLine":44,"endColumn":10},{"ruleId":"180","severity":1,"message":"201","line":47,"column":9,"nodeType":"182","endLine":51,"endColumn":10},{"ruleId":"180","severity":1,"message":"201","line":54,"column":9,"nodeType":"182","endLine":58,"endColumn":10},{"ruleId":"180","severity":1,"message":"201","line":61,"column":9,"nodeType":"182","endLine":65,"endColumn":10},{"ruleId":"183","severity":1,"message":"202","line":6,"column":26,"nodeType":"185","messageId":"186","endLine":6,"endColumn":34},{"ruleId":"183","severity":1,"message":"203","line":6,"column":36,"nodeType":"185","messageId":"186","endLine":6,"endColumn":43},{"ruleId":"183","severity":1,"message":"203","line":6,"column":40,"nodeType":"185","messageId":"186","endLine":6,"endColumn":47},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["206"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'res' is assigned a value but never used.","'PropTypes' is defined but never used.","'Link' is defined but never used.","React Hook React.useEffect has a missing dependency: 'initialState'. Either include it or remove the dependency array.",["207"],"React Hook React.useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["208"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'location' is assigned a value but never used.","'current' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [props]",{"range":"215","text":"216"},"Update the dependencies array to be: [loading, getCurrentProfile, profile, initialState]",{"range":"217","text":"218"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"219","text":"220"},[724,726],"[props]",[1300,1337],"[loading, getCurrentProfile, profile, initialState]",[649,665],"[getProfileById, match.params.id]"]