[{"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\index.js":"1","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reportWebVitals.js":"2","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\App.js":"3","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Landing.js":"4","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Navbar.js":"5","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\auth\\Register.js":"6","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\auth\\Login.js":"7","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\store.js":"8","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\index.js":"9","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\alert.js":"10","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\types.js":"11","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\alert.js":"12","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Alert.js":"13","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\auth.js":"14","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\auth.js":"15","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\utils\\setAuthToken.js":"16","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Dashboard.js":"17","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\routing\\PrivateRoute.js":"18","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\profile.js":"19","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\profile.js":"20","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Spinner.js":"21","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\DashboardActions.js":"23","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\EditProfile.js":"24","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\AddExperience.js":"25","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\AddEducation.js":"26","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Experience.js":"27","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Education.js":"28"},{"size":198,"mtime":1611345980990,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":2005,"mtime":1611505994553,"results":"32","hashOfConfig":"30"},{"size":1187,"mtime":1611456661189,"results":"33","hashOfConfig":"30"},{"size":1460,"mtime":1611456426489,"results":"34","hashOfConfig":"30"},{"size":3036,"mtime":1611450157329,"results":"35","hashOfConfig":"30"},{"size":2064,"mtime":1611450164411,"results":"36","hashOfConfig":"30"},{"size":384,"mtime":1611354146838,"results":"37","hashOfConfig":"30"},{"size":194,"mtime":1611453398701,"results":"38","hashOfConfig":"30"},{"size":392,"mtime":1611354747039,"results":"39","hashOfConfig":"30"},{"size":610,"mtime":1611511184171,"results":"40","hashOfConfig":"30"},{"size":368,"mtime":1611356557066,"results":"41","hashOfConfig":"30"},{"size":547,"mtime":1611448759717,"results":"42","hashOfConfig":"30"},{"size":1119,"mtime":1611511450055,"results":"43","hashOfConfig":"30"},{"size":2107,"mtime":1611457604080,"results":"44","hashOfConfig":"30"},{"size":258,"mtime":1611430282756,"results":"45","hashOfConfig":"30"},{"size":2237,"mtime":1611512289309,"results":"46","hashOfConfig":"30"},{"size":617,"mtime":1611453052561,"results":"47","hashOfConfig":"30"},{"size":771,"mtime":1611504728071,"results":"48","hashOfConfig":"30"},{"size":4254,"mtime":1611512230663,"results":"49","hashOfConfig":"30"},{"size":211,"mtime":1611457053013,"results":"50","hashOfConfig":"30"},{"size":7095,"mtime":1611460915330,"results":"51","hashOfConfig":"30"},{"size":781,"mtime":1611502506063,"results":"52","hashOfConfig":"30"},{"size":8041,"mtime":1611503680097,"results":"53","hashOfConfig":"30"},{"size":3456,"mtime":1611505693385,"results":"54","hashOfConfig":"30"},{"size":3474,"mtime":1611511901423,"results":"55","hashOfConfig":"30"},{"size":1438,"mtime":1611511621485,"results":"56","hashOfConfig":"30"},{"size":1453,"mtime":1611511785979,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"827zrw",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\index.js",[],["120","121"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reportWebVitals.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\App.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Landing.js",["122"],"import React from 'react';\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux'\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nfunction Landing(props) {\r\n\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Developer Connector</h1>\r\n          <p className=\"lead\">\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link\r\n              to=\"/register\"\r\n              className=\"btn btn-primary\"\r\n            >Sign Up</Link>\r\n            <a\r\n              to=\"/login\"\r\n              className=\"btn btn-light\"\r\n            >Login</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Landing);","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Navbar.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\auth\\Register.js",["123"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {setAlert} from \"../../actions/alert\";\r\nimport {register} from \"../../actions/auth\";\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nfunction Register(props) {\r\n  const [formData, setFormData] = React.useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  })\r\n\r\n  const { name, email, password, password2 } = formData\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (password !== password2) {\r\n      props.setAlert('Password do not match', 'danger', 2000)\r\n    } else {\r\n      props.register({name, email, password})\r\n    }\r\n  }\r\n\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n      <form\r\n        className=\"form\"\r\n        action=\"create-profile.html\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            required\r\n            value={name}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={onChange}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          value=\"Register\"\r\n        />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/Login\">Log in</Link>\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setAlert, register})(Register);","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\auth\\Login.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\store.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\index.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\alert.js",["124","125"],"import {SET_ALERT, REMOVE_ALERT} from \"../actions/types\";\r\n\r\nconst initialState = []\r\n\r\nexport default function (state = initialState, action) {\r\n  const {type, payload} = action\r\n\r\n  switch(type) {\r\n    case SET_ALERT:\r\n      return [...state, payload]\r\n      break;\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload)\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\types.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\alert.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Alert.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\auth.js",["126","127"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\auth.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\utils\\setAuthToken.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Dashboard.js",["128"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\reducers\\profile.js",["129"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\actions\\profile.js",["130"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\layout\\Spinner.js",["131"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Spinner = props => {\r\n  return (\r\n    <div>\r\n      Spinner\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.propTypes = {\r\n\r\n};\r\n\r\nexport default Spinner;","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\CreateProfile.js",["132"],"import React from 'react';\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux'\r\nimport {createProfile} from \"../../actions/profile\";\r\n\r\nconst CreateProfile = props => {\r\n  const [formData, setFormData] = React.useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  })\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = React.useState(false)\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData\r\n\r\n  const onChange = (e) => {\r\n    setFormData({...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    props.createProfile(formData, props.history)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <div className=\"form-group\">\r\n          <select\r\n            value={status}\r\n            onChange={onChange}\r\n            name=\"status\"\r\n          >\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small\r\n            className=\"form-text\"\r\n          >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={company}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={website}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={location}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={skills}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={githubusername}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n          />\r\n          <small\r\n            className=\"form-text\"\r\n          >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            value={bio}\r\n            onChange={onChange}\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n        {\r\n          displaySocialInputs && <React.Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                value={twitter}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                value={facebook}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                value={youtube}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                value={linkedin}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                value={instagram}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        }\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary my-1\"\r\n        />\r\n        <a\r\n          className=\"btn btn-light my-1\"\r\n          href=\"dashboard.html\"\r\n        >Go Back</a>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport default connect(null, {createProfile})(withRouter(CreateProfile));","D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\DashboardActions.js",["133"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\EditProfile.js",["134"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\AddExperience.js",["135"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\profile-forms\\AddEducation.js",["136"],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\Projects\\Courses\\brad-traversy\\mern\\client\\src\\components\\dashboard\\Education.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":30,"column":13,"nodeType":"143","endLine":33,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":13},{"ruleId":"148","severity":1,"message":"149","line":5,"column":1,"nodeType":"150","endLine":17,"endColumn":2},{"ruleId":"151","severity":1,"message":"152","line":11,"column":7,"nodeType":"153","messageId":"154","endLine":11,"endColumn":13},{"ruleId":"144","severity":1,"message":"155","line":9,"column":3,"nodeType":"146","messageId":"147","endLine":9,"endColumn":16},{"ruleId":"148","severity":1,"message":"149","line":19,"column":1,"nodeType":"150","endLine":54,"endColumn":2},{"ruleId":"156","severity":1,"message":"157","line":23,"column":6,"nodeType":"158","endLine":23,"endColumn":8,"suggestions":"159"},{"ruleId":"148","severity":1,"message":"149","line":16,"column":1,"nodeType":"150","endLine":43,"endColumn":2},{"ruleId":"144","severity":1,"message":"160","line":153,"column":13,"nodeType":"146","messageId":"147","endLine":153,"endColumn":16},{"ruleId":"144","severity":1,"message":"161","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":17},{"ruleId":"144","severity":1,"message":"162","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":13},{"ruleId":"144","severity":1,"message":"161","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":17},{"ruleId":"156","severity":1,"message":"163","line":42,"column":6,"nodeType":"158","endLine":42,"endColumn":43,"suggestions":"164"},{"ruleId":"144","severity":1,"message":"162","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":13},{"ruleId":"144","severity":1,"message":"162","line":2,"column":9,"nodeType":"146","messageId":"147","endLine":2,"endColumn":13},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'CLEAR_PROFILE' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["167"],"'res' is assigned a value but never used.","'PropTypes' is defined but never used.","'Link' is defined but never used.","React Hook React.useEffect has a missing dependency: 'initialState'. Either include it or remove the dependency array.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [props]",{"range":"173","text":"174"},"Update the dependencies array to be: [loading, getCurrentProfile, profile, initialState]",{"range":"175","text":"176"},[724,726],"[props]",[1300,1337],"[loading, getCurrentProfile, profile, initialState]"]